package com.cisco.pxgrid.samples.ise;

import java.util.List;

import com.cisco.pxgrid.GridConnection;
import com.cisco.pxgrid.model.core.SubnetContentFilter;
import com.cisco.pxgrid.model.net.Session;
import com.cisco.pxgrid.stub.identity.SessionDirectoryFactory;
import com.cisco.pxgrid.stub.identity.SessionDirectoryNotification;
import com.cisco.pxgrid.model.identity.IdentityGroupNotification;
import com.cisco.pxgrid.model.net.Group;
import com.cisco.pxgrid.model.net.User;
import com.cisco.pxgrid.stub.identity.IdentityGroupNotificationCallback;

// configure the connection properties

CertificateAuthenticationConfiguration config = new CertificateAuthenticationConfiguration();
config.setHosts(new String[]{"ise.my_server.com"});
config.setUserName("my_client");
config.setGroups(new String[] { "Session", "ANC" });
config.setDescription("some description here");
SSLContext sslContext = SSLContext.getInstance("TLSv1.2");
sslContext.init(getKeyManagers(), getTrustManagers(), null);
config.setSslContext(sslContext);


// establishing a connection with the pxGrid controller

GridConnection con = new GridConnection(config);
ReconnectionManager recon = new ReconnectionManager(con);
recon.setRetryMillisecond(2000);
recon.start();


// creating a custom session notification handler

public class SampleNotificationHandler
    implements SessionDirectoryNotification
{
    @Override
    public void onChange(Session session) {
        System.out.println("received session: " + session.getGid());
    }
}

// creating a custom session notification handler  

SampleNotificationHandler handler = new SampleNotificationHandler();
SessionDirectoryFactory.registerNotification(con, handler);



/**
 * Demonstrates how to subscribe to session notifications generated by ISE
 */
public class SessionSubscribe {
    public static void main(String[] args) throws Exception {
        SampleHelper helper = new SampleHelper();
        GridConnection grid = helper.connectWithReconnectionManager();

        SubnetContentFilter filter = helper.promptIpFilters("Filters (ex. '1.0.0.0/255.0.0.0,1234::/16,...' or <enter> for no filter): ");

        if (filter != null) {
            SessionDirectoryFactory.registerNotification(grid, new SampleNotificationHandler(), filter);
        } else {
            SessionDirectoryFactory.registerNotification(grid, new SampleNotificationHandler());
        }

        helper.prompt("press <enter> to disconnect...");
        helper.disconnect();
    }

    public static class SampleNotificationHandler
        implements SessionDirectoryNotification {
        @Override
        public void onChange(Session session) {
            System.out.println("session notification: ");
            SampleHelper.print(session);
            System.out.println("");
        }
    }
}




/**
 * Demonstrates how to use an xGrid client to subscribe to identity group notifications.
 */
public class UserIdentityGroupSubscribe {
    public static void main(String[] args) throws Exception {
        SampleHelper helper = new SampleHelper();
        GridConnection grid = helper.connectWithReconnectionManager();

        SessionDirectoryFactory.registerNotification(grid, new SampleNotificationHandler());

        helper.prompt("Press <enter> to disconnect...");
        helper.disconnect();
    }

    private static class SampleNotificationHandler implements IdentityGroupNotificationCallback {
        @Override
        public void handle(IdentityGroupNotification notf) {
            List<User> users = notf.getUsers();
            if (users != null) {
                for (User user : users) {
                    System.out.println("user=" + user.getName());
                    for (Group group : user.getGroupList().getObjects()) {
                        System.out.println("group=" + group.getName());
                    }
                }
            }
        }

    }

}